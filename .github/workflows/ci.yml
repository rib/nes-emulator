name: CI

on: [pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  # Check code formatting.
  fmt:
    name: Rustfmt
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Static analyzer.
  clippy:
    name: Clippy
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true
      - name: Install Rust targets
        run: >
          rustup target add
          aarch64-linux-android
          wasm32-unknown-unknown

      # actions-rs/clippy-check is basically unmaintained causes lots of warnings about
      # using deprecated features so we just run clippy manually
      - name: Run clippy (Common)
        run: cargo clippy --workspace --tests --all-features --exclude nes-emulator-android --exclude nes-emulator-web -- -D warnings
      - name: Run clippy (Web)
        run: cargo clippy --package nes-emulator-web --tests --all-features --target wasm32-unknown-unknown -- -D warnings
      - name: Install cargo-ndk
        run: cargo install cargo-ndk
      - name: Run clippy (Android) # actions-rs/clippy-check doesn't support cargo ndk
        working-directory: nes-emulator-android
        run: ndk -t arm64-v8a check --package nes-emulator-android

  # Security audit.
  audit:
    name: Security audit
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # Tests.
  test:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          #- build: Linux
          #  os: ubuntu-latest
          #- build: macOS
          #  os: macOS-latest
          - build: Windows
            os: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build Emulator
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --manifest-path nes-emulator-app/Cargo.toml
      - name: Unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Emulator ROM Tests
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -- -d roms/nes-test-roms -m tests/tests.json -p all -q --results results.json
      - uses: actions/upload-artifact@v2
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-results
          path: results.json
